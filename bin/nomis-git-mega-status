#!/usr/bin/env bash
set -e

#### ___________________________________________________________________________
#### Description
####
#### Search recursively for Git repos and produce status reports on them.
#### Use red output to highlight differences between local and remote.
#### Use white output for other info such as branch names.
####
#### ___________________________________________________________________________
#### Options and usage

script=$(basename "${BASH_SOURCE[0]}")

function usage {
    echo "Usage:"
    echo ""
    echo "To print this help:"
    echo "  $script -h"
    echo ""
    echo "To run:"
    echo "  $script [<args for nomis-git-status>] [-- <args for nomis-do-to-all-git-repos>]"
    echo ""
    echo "See nomis-do-to-all-git-repos and nomis-git-status for details of their options."
    echo ""
    echo "Examples:"
    echo ""
    echo "   nomis-git-mega-status"
    echo "     Produce a report for each repo that has something different between"
    echo "     local and remote, showing just those differences."
    echo "     Also report on any current non-master branches."
    echo ""
    echo "   nomis-git-mega-status -m"
    echo "     Does not report on current non-master branches."
    echo ""
    echo "   nomis-git-mega-status -- -f"
    echo "     Produce a report for each repo, showing just the differences between"
    echo "     local and remote. Include reports with empty bodies (ie with just a"
    echo "     heading identifying the repo)."
    echo ""
    echo "   nomis-git-mega-status -v"
    echo "     Produce a full report on each repo."
    echo ""
    echo "   nomis-git-mega-status -v -- -f | less -NR"
    echo "     Produce a big report and pipe the output into `less`. The -N option"
    echo "     gives line numbers and the -R option deals with ANSI color codes."
}

if [[ "$*" == "-h" ]] ; then
    usage
    exit 0
fi


args_before_double_dash=
args_after_double_dash=

doing_args_before_double_dash_p="YES"

while [[ $# -gt 0 ]]
do
    if [[ "$1" == "--" ]] ; then
        doing_args_before_double_dash_p=
    else
        if [[ "${doing_args_before_double_dash_p}" ]] ; then
            args_before_double_dash="${args_before_double_dash} $1"
        else
            args_after_double_dash="${args_after_double_dash} $1"
        fi
    fi
    shift
done

#### ___________________________________________________________________________
#### Main functionality

nomis-do-to-all-git-repos ${args_after_double_dash} \
                          nomis-git-status ${args_before_double_dash}
